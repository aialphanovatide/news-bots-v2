{
  "swagger": "2.0",
  "info": {
    "title": "News Bots V2 API",
    "description": "API for managing All routes related to News Bots",
    "version": "2.0"
  },
  "tags": [
    {
      "name": "Articles",
      "description": "Operations related to articles"
    }
  ],
  "paths": {
    "/articles": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Retrieve articles with optional pagination.",
        "description": "This endpoint retrieves articles with optional pagination. if no pagination parameters (page and per_page) are provided, all articles will be returned. when pagination is used, the response includes pagination information. articles are sorted by creation date in descending order.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number for pagination (optional)",
            "required": false,
            "type": "integer",
            "schema": {}
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of articles per page for pagination (optional)",
            "required": false,
            "type": "integer",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved articles",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "total_items": {
                      "type": "integer"
                    }
                  },
                  "nullable": true
                }
              }
            }
          },
          "204": {
            "description": "No articles found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {}
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/article/{article_id}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Retrieve a specific article by its id",
        "description": "This endpoint retrieves a specific article by its id from either the article or unwantedarticle table. it returns the article details if found in either table. if the article is not found in either table, it returns an error response.",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "description": "The ID of the article to retrieve",
            "required": true,
            "type": "integer",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved article",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "content": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "source": {
                  "type": "string",
                  "enum": [
                    "Article",
                    "UnwantedArticle"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Article not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Delete an article by its id",
        "description": "This endpoint deletes a specific article by its id. if the article is successfully deleted, it returns a success message. if the article is not found or there is a database error, it returns an appropriate error message.",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "description": "The ID of the article to delete",
            "required": true,
            "type": "integer",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Article deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Article not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/articles/create": {
      "post": {
        "tags": [
          "News Creator"
        ],
        "summary": "Create a new article",
        "description": "Create a new article with the provided data.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "content",
                  "analysis",
                  "used_keywords",
                  "is_article_efficient",
                  "bot_id",
                  "category_id",
                  "image_url"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "analysis": {
                    "type": "string"
                  },
                  "used_keywords": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "is_article_efficient": {
                    "type": "string"
                  },
                  "bot_id": {
                    "type": "integer"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "image_url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article created successfully"
          },
          "400": {
            "description": "Bad request. Missing required fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles/generate_image": {
      "post": {
        "tags": [
          "News Creator"
        ],
        "summary": "Generate an image using DALL-E 3 model",
        "description": "Generate an image based on the content and bot_id using DALL-E 3 model.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content",
                  "bot_id"
                ],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "bot_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image generated successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles/generate": {
      "post": {
        "tags": [
          "News Creator"
        ],
        "summary": "Generate an article summary using the Perplexity model",
        "description": "Generate a new article summary based on the provided content and category_id.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content",
                  "category_id"
                ],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "category_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article summary generated successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles/recent": {
      "get": {
        "tags": [
          "News Creator"
        ],
        "summary": "Get the last five articles",
        "description": "Retrieve the last five articles with extended details.",
        "responses": {
          "200": {
            "description": "Successfully retrieved the last five articles"
          },
          "404": {
            "description": "No articles found matching the criteria"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/content/extract": {
      "post": {
        "tags": [
          "News Creator"
        ],
        "summary": "Extract content from a link or Google Docs",
        "description": "Extract content from a provided link or Google Docs based on the extract type.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "extract_type",
                  "link"
                ],
                "properties": {
                  "extract_type": {
                    "type": "string",
                    "description": "Type of extraction ('link' or 'google_docs')"
                  },
                  "link": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully extracted content"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/upload_news_file_to_drive": {
      "post": {
        "tags": [
          "News Creator"
        ],
        "summary": "Upload a file to Google Drive",
        "description": "Upload a file to a specified folder in Google Drive.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "folderName",
                  "file",
                  "fileName"
                ],
                "properties": {
                  "folderName": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "fileName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully"
          },
          "400": {
            "description": "Bad request. Missing required data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bots": {
      "get": {
        "tags": [
          "Bots"
        ],
        "summary": "Get all bots data",
        "description": "This endpoint retrieves data for all bots in the system. the bots are sorted alphabetically by their names.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all bots retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/create_bot": {
      "post": {
        "summary": "Create and schedule a new news Bot",
        "tags": [
          "Bots"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "category_id": {
                  "type": "integer"
                },
                "url": {
                  "type": "string"
                },
                "keywords": {
                  "type": "string"
                },
                "blacklist": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "category_id",
                "url",
                "keywords",
                "blacklist"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "category_id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Category ID not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/delete_bot/{bot_id}": {
      "delete": {
        "summary": "Delete a single Bot by ID",
        "tags": [
          "Bots"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bot_id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the bot to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Bot deleted successfully"
          },
          "404": {
            "description": "Bot not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "summary": "List all scheduled jobs",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "A list of all scheduled jobs",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "next_run_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/top-stories": {
      "get": {
        "tags": [
          "Top Stories"
        ],
        "summary": "Retrieve top stories",
        "description": "Get a list of top stories from the article database",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of top stories to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopStoriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/top-story/{article_id}": {
      "get": {
        "tags": [
          "Top Stories"
        ],
        "summary": "Retrieve a single top story",
        "description": "Get a specific top story article by its ID",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "ID of the article to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleTopStoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Article not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Top Stories"
        ],
        "summary": "Remove a top story",
        "description": "Remove an article from top stories by setting its is_top_story flag to False",
        "parameters": [
          {
            "name": "article_id",
            "in": "path",
            "required": true,
            "description": "ID of the article to remove from top stories",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Article not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/article": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Retrieve articles by bot id or bot name with optional pagination and search functionality",
        "description": "This endpoint retrieves articles by bot id or bot name. it supports optional pagination and search functionality. if no pagination parameters are provided, all matching articles are returned. articles are sorted by creation date in descending order.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "query",
            "description": "ID of the bot (optional if bot_name is provided)",
            "required": false,
            "type": "integer",
            "schema": {}
          },
          {
            "name": "bot_name",
            "in": "query",
            "description": "Name of the bot (optional if bot_id is provided)",
            "required": false,
            "type": "string",
            "schema": {}
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for pagination (optional)",
            "required": false,
            "type": "integer",
            "schema": {}
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of articles per page for pagination (optional)",
            "required": false,
            "type": "integer",
            "schema": {}
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term to filter articles by content (optional)",
            "required": false,
            "type": "string",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved articles",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "total_items": {
                      "type": "integer"
                    }
                  },
                  "nullable": true
                }
              }
            }
          },
          "204": {
            "description": "No articles found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {}
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Bot not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/articles/unwanted": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "Retrieve unwanted articles with optional filtering, pagination, and search functionality",
        "description": "This endpoint retrieves unwanted articles from the database. it supports optional filtering by bot id, pagination, and search functionality. if no pagination parameters are provided, all matching unwanted articles are returned. articles are sorted by creation date in descending order. the maximum number of items per page is limited to 100.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "query",
            "description": "Bot ID to filter unwanted articles",
            "required": false,
            "type": "integer",
            "schema": {}
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for pagination (optional)",
            "required": false,
            "type": "integer",
            "schema": {}
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page for pagination (optional, max: 100)",
            "required": false,
            "type": "integer",
            "schema": {}
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term to filter unwanted articles by title or content (optional)",
            "required": false,
            "type": "string",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved unwanted articles",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "bot_id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "total_items": {
                      "type": "integer"
                    }
                  },
                  "nullable": true
                }
              }
            }
          },
          "204": {
            "description": "No unwanted articles found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {}
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Page not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/keywords-search": {
      "get": {
        "tags": [
          "Keywords"
        ],
        "summary": "Search for related keywords and backlist words",
        "description": "This endpoint searches for related keywords and backlist words based on the provided query string. it searches through both the keyword and backlist tables, returning any matching results.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Word to search for related keywords and backlist words",
            "required": true,
            "type": "string",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved relevant words",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of related keywords and backlist words"
                }
              }
            }
          },
          "400": {
            "description": "Missing query parameter",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "No related words found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/bot": {
      "get": {
        "tags": [
          "Bots"
        ],
        "summary": "Get a specific bot by name or id, including related keywords, blacklist items, and site data",
        "description": "This endpoint retrieves detailed information about a specific bot, including its related keywords, blacklist items, and associated site data. the bot can be identified either by its name or id.",
        "parameters": [
          {
            "name": "bot_name",
            "in": "query",
            "description": "Name of the bot to retrieve",
            "required": false,
            "type": "string",
            "schema": {}
          },
          {
            "name": "bot_id",
            "in": "query",
            "description": "ID of the bot to retrieve",
            "required": false,
            "type": "integer",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Bot information retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "keywords": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "blacklist": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "site": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "bot_id": {
                          "type": "integer"
                        },
                        "url": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Bot not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/bot/{bot_id}": {
      "put": {
        "tags": [
          "Bots"
        ],
        "summary": "Update an existing bot in the news bot server and reschedule if necessary",
        "description": "This endpoint updates a bot entry with the provided details, saves the changes to the database, and reschedules the bot if it's active and its run frequency has changed.",
        "parameters": [
          {
            "name": "bot_id",
            "in": "path",
            "description": "The ID of the bot to be updated",
            "required": true,
            "type": "integer",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Bot updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid data)",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Bot not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TopStoriesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "SingleTopStoryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/Article"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "analysis": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "used_keywords": {
            "type": "string"
          },
          "is_article_efficent": {
            "type": "string"
          },
          "is_top_story": {
            "type": "boolean"
          },
          "bot_id": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}